## All samples are generated as bam files using the following command
## cut adaptor
cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT \
    -o sample.cutadapt.1.fq.gz -p sample.cutadapt.2.fq.gz  \
    sample_1.fq.gz sample_2.fq.gz -j 0

## mapping
hisat2 -p 8 --rna-strandness RF \
    --dta -x Mus_musculus.GRCm38.dna_sm.chromosome.1 -U sample.cutadapt.1.fq.gz \
    -S sample.sam

## sam to bam
/usr/local/bin/samtools view -@ 16 -b -S sample.sam -o sample.bam
/usr/local/bin/samtools sort -@ 16 -m 3G -o sample.sorted.bam sample.bam
/usr/local/bin/samtools view -@ 16 -b -q 30 sample.sorted.bam -o sample.uniq.sorted.bam
/usr/local/bin/samtools index -@ 16 sample.uniq.sorted.bam

## call peak using exomepeak in R
result_Group = exomepeak(GENOME = "mm10",UCSC_TABLE_NAME = "ensGene", IP_BAM=c(f1,f2), INPUT_BAM=c(f3,f4),EXPERIMENT_NAME = "exomePeak_AD")

## motif analysis using homer
findMotifsGenome.pl peak.bed Mus_musculus.GRCm38.dna_sm.primary_assembly.fa \
    group_homer_out/ -len 12 -rna -p 12

## identifying the number of input genes using featurecounts
featureCounts -s RF -T 12 -t exon -g gene_id \
        -a Mus_musculus.GRCm38.91.gtf -o All.counts.txt `ls *input.uniq.sorted.bam`

## diff analysis using DESeq2 in R
DESeq2 in R:
count_data <- read.delim('All.count.txt')
sample_info <- read.csv('g2VSg1.csv')
condition <- factor( c(rep('g1',3), rep('g2',3)))

dds <- DESeqDataSetFromMatrix(countData = count_data,
                              colData = sample_info,
                              design = ~ condition)
dds <- DESeq(dds)
res <- results(dds)
res_sig <- res[res$pvalue < 0.05 & abs(res$log2FoldChange) > 1,]

## gokegg analysis using clusterProfile in R
enrich_resGO <- enrichGO(gene = gene_list$gene_symbol,
                       OrgDb = org.Mm.eg.db,
                       keyType = "SYMBOL",
                       ont = "ALL",
                       minGSSize = 2,
                       pAdjustMethod = "fdr",
                       pvalueCutoff = 1,
                       qvalueCutoff = 1,
                       readable = TRUE)
enrich_resKEGG <- enrichKEGG(gene = gene_list$gene_symbol,
                       organism = "mmu",
                       keyType = "kegg",
                       minGSSize = 2,
                       pAdjustMethod = "fdr",
                       pvalueCutoff = 1,
                       qvalueCutoff = 1,
                       readable = TRUE)
